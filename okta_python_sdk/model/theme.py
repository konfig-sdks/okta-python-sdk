# coding: utf-8

"""
    Okta API

    Allows customers to easily access the Okta API

    The version of the OpenAPI document: 2.16.0
    Contact: devex-public@okta.com
    Created by: https://developer.okta.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from okta_python_sdk import schemas  # noqa: F401


class Theme(
    schemas.AnyTypeSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class _links(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.DictSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, ],
                ) -> '_links':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            backgroundImage = schemas.StrSchema
        
            @staticmethod
            def emailTemplateTouchPointVariant() -> typing.Type['EmailTemplateTouchPointVariant']:
                return EmailTemplateTouchPointVariant
        
            @staticmethod
            def endUserDashboardTouchPointVariant() -> typing.Type['EndUserDashboardTouchPointVariant']:
                return EndUserDashboardTouchPointVariant
        
            @staticmethod
            def errorPageTouchPointVariant() -> typing.Type['ErrorPageTouchPointVariant']:
                return ErrorPageTouchPointVariant
            primaryColorContrastHex = schemas.StrSchema
            primaryColorHex = schemas.StrSchema
            secondaryColorContrastHex = schemas.StrSchema
            secondaryColorHex = schemas.StrSchema
        
            @staticmethod
            def signInPageTouchPointVariant() -> typing.Type['SignInPageTouchPointVariant']:
                return SignInPageTouchPointVariant
            __annotations__ = {
                "_links": _links,
                "backgroundImage": backgroundImage,
                "emailTemplateTouchPointVariant": emailTemplateTouchPointVariant,
                "endUserDashboardTouchPointVariant": endUserDashboardTouchPointVariant,
                "errorPageTouchPointVariant": errorPageTouchPointVariant,
                "primaryColorContrastHex": primaryColorContrastHex,
                "primaryColorHex": primaryColorHex,
                "secondaryColorContrastHex": secondaryColorContrastHex,
                "secondaryColorHex": secondaryColorHex,
                "signInPageTouchPointVariant": signInPageTouchPointVariant,
            }

    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["_links"]) -> MetaOapg.properties._links: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["backgroundImage"]) -> MetaOapg.properties.backgroundImage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailTemplateTouchPointVariant"]) -> 'EmailTemplateTouchPointVariant': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endUserDashboardTouchPointVariant"]) -> 'EndUserDashboardTouchPointVariant': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["errorPageTouchPointVariant"]) -> 'ErrorPageTouchPointVariant': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["primaryColorContrastHex"]) -> MetaOapg.properties.primaryColorContrastHex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["primaryColorHex"]) -> MetaOapg.properties.primaryColorHex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondaryColorContrastHex"]) -> MetaOapg.properties.secondaryColorContrastHex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondaryColorHex"]) -> MetaOapg.properties.secondaryColorHex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["signInPageTouchPointVariant"]) -> 'SignInPageTouchPointVariant': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["_links", "backgroundImage", "emailTemplateTouchPointVariant", "endUserDashboardTouchPointVariant", "errorPageTouchPointVariant", "primaryColorContrastHex", "primaryColorHex", "secondaryColorContrastHex", "secondaryColorHex", "signInPageTouchPointVariant", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["_links"]) -> typing.Union[MetaOapg.properties._links, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["backgroundImage"]) -> typing.Union[MetaOapg.properties.backgroundImage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailTemplateTouchPointVariant"]) -> typing.Union['EmailTemplateTouchPointVariant', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endUserDashboardTouchPointVariant"]) -> typing.Union['EndUserDashboardTouchPointVariant', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["errorPageTouchPointVariant"]) -> typing.Union['ErrorPageTouchPointVariant', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["primaryColorContrastHex"]) -> typing.Union[MetaOapg.properties.primaryColorContrastHex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["primaryColorHex"]) -> typing.Union[MetaOapg.properties.primaryColorHex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondaryColorContrastHex"]) -> typing.Union[MetaOapg.properties.secondaryColorContrastHex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondaryColorHex"]) -> typing.Union[MetaOapg.properties.secondaryColorHex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["signInPageTouchPointVariant"]) -> typing.Union['SignInPageTouchPointVariant', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["_links", "backgroundImage", "emailTemplateTouchPointVariant", "endUserDashboardTouchPointVariant", "errorPageTouchPointVariant", "primaryColorContrastHex", "primaryColorHex", "secondaryColorContrastHex", "secondaryColorHex", "signInPageTouchPointVariant", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _links: typing.Union[MetaOapg.properties._links, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        backgroundImage: typing.Union[MetaOapg.properties.backgroundImage, str, schemas.Unset] = schemas.unset,
        emailTemplateTouchPointVariant: typing.Union['EmailTemplateTouchPointVariant', schemas.Unset] = schemas.unset,
        endUserDashboardTouchPointVariant: typing.Union['EndUserDashboardTouchPointVariant', schemas.Unset] = schemas.unset,
        errorPageTouchPointVariant: typing.Union['ErrorPageTouchPointVariant', schemas.Unset] = schemas.unset,
        primaryColorContrastHex: typing.Union[MetaOapg.properties.primaryColorContrastHex, str, schemas.Unset] = schemas.unset,
        primaryColorHex: typing.Union[MetaOapg.properties.primaryColorHex, str, schemas.Unset] = schemas.unset,
        secondaryColorContrastHex: typing.Union[MetaOapg.properties.secondaryColorContrastHex, str, schemas.Unset] = schemas.unset,
        secondaryColorHex: typing.Union[MetaOapg.properties.secondaryColorHex, str, schemas.Unset] = schemas.unset,
        signInPageTouchPointVariant: typing.Union['SignInPageTouchPointVariant', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Theme':
        return super().__new__(
            cls,
            *args,
            _links=_links,
            backgroundImage=backgroundImage,
            emailTemplateTouchPointVariant=emailTemplateTouchPointVariant,
            endUserDashboardTouchPointVariant=endUserDashboardTouchPointVariant,
            errorPageTouchPointVariant=errorPageTouchPointVariant,
            primaryColorContrastHex=primaryColorContrastHex,
            primaryColorHex=primaryColorHex,
            secondaryColorContrastHex=secondaryColorContrastHex,
            secondaryColorHex=secondaryColorHex,
            signInPageTouchPointVariant=signInPageTouchPointVariant,
            _configuration=_configuration,
            **kwargs,
        )

from okta_python_sdk.model.email_template_touch_point_variant import EmailTemplateTouchPointVariant
from okta_python_sdk.model.end_user_dashboard_touch_point_variant import EndUserDashboardTouchPointVariant
from okta_python_sdk.model.error_page_touch_point_variant import ErrorPageTouchPointVariant
from okta_python_sdk.model.sign_in_page_touch_point_variant import SignInPageTouchPointVariant
