# coding: utf-8

"""
    Okta API

    Allows customers to easily access the Okta API

    The version of the OpenAPI document: 2.16.0
    Contact: devex-public@okta.com
    Created by: https://developer.okta.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from okta_python_sdk import schemas  # noqa: F401


class ProfileEnrollmentPolicyRuleAction(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            access = schemas.StrSchema
        
            @staticmethod
            def activationRequirements() -> typing.Type['ProfileEnrollmentPolicyRuleActivationRequirement']:
                return ProfileEnrollmentPolicyRuleActivationRequirement
            
            
            class preRegistrationInlineHooks(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['PreRegistrationInlineHook']:
                        return PreRegistrationInlineHook
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['PreRegistrationInlineHook'], typing.List['PreRegistrationInlineHook']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'preRegistrationInlineHooks':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'PreRegistrationInlineHook':
                    return super().__getitem__(i)
            
            
            class profileAttributes(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProfileEnrollmentPolicyRuleProfileAttribute']:
                        return ProfileEnrollmentPolicyRuleProfileAttribute
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ProfileEnrollmentPolicyRuleProfileAttribute'], typing.List['ProfileEnrollmentPolicyRuleProfileAttribute']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'profileAttributes':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProfileEnrollmentPolicyRuleProfileAttribute':
                    return super().__getitem__(i)
        
            @staticmethod
            def targetGroupIds() -> typing.Type['ProfileEnrollmentPolicyRuleActionTargetGroupIds']:
                return ProfileEnrollmentPolicyRuleActionTargetGroupIds
            uiSchemaId = schemas.StrSchema
            unknownUserAction = schemas.StrSchema
            __annotations__ = {
                "access": access,
                "activationRequirements": activationRequirements,
                "preRegistrationInlineHooks": preRegistrationInlineHooks,
                "profileAttributes": profileAttributes,
                "targetGroupIds": targetGroupIds,
                "uiSchemaId": uiSchemaId,
                "unknownUserAction": unknownUserAction,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["access"]) -> MetaOapg.properties.access: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["activationRequirements"]) -> 'ProfileEnrollmentPolicyRuleActivationRequirement': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preRegistrationInlineHooks"]) -> MetaOapg.properties.preRegistrationInlineHooks: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileAttributes"]) -> MetaOapg.properties.profileAttributes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["targetGroupIds"]) -> 'ProfileEnrollmentPolicyRuleActionTargetGroupIds': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uiSchemaId"]) -> MetaOapg.properties.uiSchemaId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unknownUserAction"]) -> MetaOapg.properties.unknownUserAction: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["access", "activationRequirements", "preRegistrationInlineHooks", "profileAttributes", "targetGroupIds", "uiSchemaId", "unknownUserAction", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["access"]) -> typing.Union[MetaOapg.properties.access, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["activationRequirements"]) -> typing.Union['ProfileEnrollmentPolicyRuleActivationRequirement', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preRegistrationInlineHooks"]) -> typing.Union[MetaOapg.properties.preRegistrationInlineHooks, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileAttributes"]) -> typing.Union[MetaOapg.properties.profileAttributes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["targetGroupIds"]) -> typing.Union['ProfileEnrollmentPolicyRuleActionTargetGroupIds', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uiSchemaId"]) -> typing.Union[MetaOapg.properties.uiSchemaId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unknownUserAction"]) -> typing.Union[MetaOapg.properties.unknownUserAction, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["access", "activationRequirements", "preRegistrationInlineHooks", "profileAttributes", "targetGroupIds", "uiSchemaId", "unknownUserAction", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        access: typing.Union[MetaOapg.properties.access, str, schemas.Unset] = schemas.unset,
        activationRequirements: typing.Union['ProfileEnrollmentPolicyRuleActivationRequirement', schemas.Unset] = schemas.unset,
        preRegistrationInlineHooks: typing.Union[MetaOapg.properties.preRegistrationInlineHooks, list, tuple, schemas.Unset] = schemas.unset,
        profileAttributes: typing.Union[MetaOapg.properties.profileAttributes, list, tuple, schemas.Unset] = schemas.unset,
        targetGroupIds: typing.Union['ProfileEnrollmentPolicyRuleActionTargetGroupIds', schemas.Unset] = schemas.unset,
        uiSchemaId: typing.Union[MetaOapg.properties.uiSchemaId, str, schemas.Unset] = schemas.unset,
        unknownUserAction: typing.Union[MetaOapg.properties.unknownUserAction, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProfileEnrollmentPolicyRuleAction':
        return super().__new__(
            cls,
            *args,
            access=access,
            activationRequirements=activationRequirements,
            preRegistrationInlineHooks=preRegistrationInlineHooks,
            profileAttributes=profileAttributes,
            targetGroupIds=targetGroupIds,
            uiSchemaId=uiSchemaId,
            unknownUserAction=unknownUserAction,
            _configuration=_configuration,
            **kwargs,
        )

from okta_python_sdk.model.pre_registration_inline_hook import PreRegistrationInlineHook
from okta_python_sdk.model.profile_enrollment_policy_rule_action_target_group_ids import ProfileEnrollmentPolicyRuleActionTargetGroupIds
from okta_python_sdk.model.profile_enrollment_policy_rule_activation_requirement import ProfileEnrollmentPolicyRuleActivationRequirement
from okta_python_sdk.model.profile_enrollment_policy_rule_profile_attribute import ProfileEnrollmentPolicyRuleProfileAttribute
