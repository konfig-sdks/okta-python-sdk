# coding: utf-8

"""
    Okta API

    Allows customers to easily access the Okta API

    The version of the OpenAPI document: 2.16.0
    Contact: devex-public@okta.com
    Created by: https://developer.okta.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from okta_python_sdk import schemas  # noqa: F401


class IdentityProviderPolicy(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def accountLink() -> typing.Type['PolicyAccountLink']:
                return PolicyAccountLink
            maxClockSkew = schemas.IntSchema
        
            @staticmethod
            def provisioning() -> typing.Type['Provisioning']:
                return Provisioning
        
            @staticmethod
            def subject() -> typing.Type['PolicySubject']:
                return PolicySubject
            __annotations__ = {
                "accountLink": accountLink,
                "maxClockSkew": maxClockSkew,
                "provisioning": provisioning,
                "subject": subject,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountLink"]) -> 'PolicyAccountLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxClockSkew"]) -> MetaOapg.properties.maxClockSkew: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["provisioning"]) -> 'Provisioning': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subject"]) -> 'PolicySubject': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["accountLink", "maxClockSkew", "provisioning", "subject", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountLink"]) -> typing.Union['PolicyAccountLink', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxClockSkew"]) -> typing.Union[MetaOapg.properties.maxClockSkew, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["provisioning"]) -> typing.Union['Provisioning', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subject"]) -> typing.Union['PolicySubject', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["accountLink", "maxClockSkew", "provisioning", "subject", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        accountLink: typing.Union['PolicyAccountLink', schemas.Unset] = schemas.unset,
        maxClockSkew: typing.Union[MetaOapg.properties.maxClockSkew, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        provisioning: typing.Union['Provisioning', schemas.Unset] = schemas.unset,
        subject: typing.Union['PolicySubject', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'IdentityProviderPolicy':
        return super().__new__(
            cls,
            *args,
            accountLink=accountLink,
            maxClockSkew=maxClockSkew,
            provisioning=provisioning,
            subject=subject,
            _configuration=_configuration,
            **kwargs,
        )

from okta_python_sdk.model.policy_account_link import PolicyAccountLink
from okta_python_sdk.model.policy_subject import PolicySubject
from okta_python_sdk.model.provisioning import Provisioning
