# coding: utf-8

"""
    Okta API

    Allows customers to easily access the Okta API

    The version of the OpenAPI document: 2.16.0
    Contact: devex-public@okta.com
    Created by: https://developer.okta.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from okta_python_sdk import schemas  # noqa: F401


class PolicyRuleActions(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def enroll() -> typing.Type['PolicyRuleActionsEnroll']:
                return PolicyRuleActionsEnroll
        
            @staticmethod
            def idp() -> typing.Type['IdpPolicyRuleAction']:
                return IdpPolicyRuleAction
        
            @staticmethod
            def passwordChange() -> typing.Type['PasswordPolicyRuleAction']:
                return PasswordPolicyRuleAction
        
            @staticmethod
            def selfServicePasswordReset() -> typing.Type['PasswordPolicyRuleAction']:
                return PasswordPolicyRuleAction
        
            @staticmethod
            def selfServiceUnlock() -> typing.Type['PasswordPolicyRuleAction']:
                return PasswordPolicyRuleAction
        
            @staticmethod
            def signon() -> typing.Type['OktaSignOnPolicyRuleSignonActions']:
                return OktaSignOnPolicyRuleSignonActions
            __annotations__ = {
                "enroll": enroll,
                "idp": idp,
                "passwordChange": passwordChange,
                "selfServicePasswordReset": selfServicePasswordReset,
                "selfServiceUnlock": selfServiceUnlock,
                "signon": signon,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enroll"]) -> 'PolicyRuleActionsEnroll': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idp"]) -> 'IdpPolicyRuleAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordChange"]) -> 'PasswordPolicyRuleAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["selfServicePasswordReset"]) -> 'PasswordPolicyRuleAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["selfServiceUnlock"]) -> 'PasswordPolicyRuleAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["signon"]) -> 'OktaSignOnPolicyRuleSignonActions': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["enroll", "idp", "passwordChange", "selfServicePasswordReset", "selfServiceUnlock", "signon", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enroll"]) -> typing.Union['PolicyRuleActionsEnroll', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idp"]) -> typing.Union['IdpPolicyRuleAction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordChange"]) -> typing.Union['PasswordPolicyRuleAction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["selfServicePasswordReset"]) -> typing.Union['PasswordPolicyRuleAction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["selfServiceUnlock"]) -> typing.Union['PasswordPolicyRuleAction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["signon"]) -> typing.Union['OktaSignOnPolicyRuleSignonActions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["enroll", "idp", "passwordChange", "selfServicePasswordReset", "selfServiceUnlock", "signon", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        enroll: typing.Union['PolicyRuleActionsEnroll', schemas.Unset] = schemas.unset,
        idp: typing.Union['IdpPolicyRuleAction', schemas.Unset] = schemas.unset,
        passwordChange: typing.Union['PasswordPolicyRuleAction', schemas.Unset] = schemas.unset,
        selfServicePasswordReset: typing.Union['PasswordPolicyRuleAction', schemas.Unset] = schemas.unset,
        selfServiceUnlock: typing.Union['PasswordPolicyRuleAction', schemas.Unset] = schemas.unset,
        signon: typing.Union['OktaSignOnPolicyRuleSignonActions', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PolicyRuleActions':
        return super().__new__(
            cls,
            *args,
            enroll=enroll,
            idp=idp,
            passwordChange=passwordChange,
            selfServicePasswordReset=selfServicePasswordReset,
            selfServiceUnlock=selfServiceUnlock,
            signon=signon,
            _configuration=_configuration,
            **kwargs,
        )

from okta_python_sdk.model.idp_policy_rule_action import IdpPolicyRuleAction
from okta_python_sdk.model.okta_sign_on_policy_rule_signon_actions import OktaSignOnPolicyRuleSignonActions
from okta_python_sdk.model.password_policy_rule_action import PasswordPolicyRuleAction
from okta_python_sdk.model.policy_rule_actions_enroll import PolicyRuleActionsEnroll
