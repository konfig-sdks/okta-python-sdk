# coding: utf-8

"""
    Okta API

    Allows customers to easily access the Okta API

    The version of the OpenAPI document: 2.16.0
    Contact: devex-public@okta.com
    Created by: https://developer.okta.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from okta_python_sdk import schemas  # noqa: F401


class WsFederationApplicationSettingsApplication(
    schemas.AnyTypeSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            attributeStatements = schemas.StrSchema
            audienceRestriction = schemas.StrSchema
            authnContextClassRef = schemas.StrSchema
            groupFilter = schemas.StrSchema
            groupName = schemas.StrSchema
            groupValueFormat = schemas.StrSchema
            nameIDFormat = schemas.StrSchema
            realm = schemas.StrSchema
            siteURL = schemas.StrSchema
            usernameAttribute = schemas.StrSchema
            wReplyOverride = schemas.BoolSchema
            wReplyURL = schemas.StrSchema
            __annotations__ = {
                "attributeStatements": attributeStatements,
                "audienceRestriction": audienceRestriction,
                "authnContextClassRef": authnContextClassRef,
                "groupFilter": groupFilter,
                "groupName": groupName,
                "groupValueFormat": groupValueFormat,
                "nameIDFormat": nameIDFormat,
                "realm": realm,
                "siteURL": siteURL,
                "usernameAttribute": usernameAttribute,
                "wReplyOverride": wReplyOverride,
                "wReplyURL": wReplyURL,
            }

    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attributeStatements"]) -> MetaOapg.properties.attributeStatements: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audienceRestriction"]) -> MetaOapg.properties.audienceRestriction: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authnContextClassRef"]) -> MetaOapg.properties.authnContextClassRef: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupFilter"]) -> MetaOapg.properties.groupFilter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupName"]) -> MetaOapg.properties.groupName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupValueFormat"]) -> MetaOapg.properties.groupValueFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nameIDFormat"]) -> MetaOapg.properties.nameIDFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["realm"]) -> MetaOapg.properties.realm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["siteURL"]) -> MetaOapg.properties.siteURL: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernameAttribute"]) -> MetaOapg.properties.usernameAttribute: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wReplyOverride"]) -> MetaOapg.properties.wReplyOverride: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wReplyURL"]) -> MetaOapg.properties.wReplyURL: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["attributeStatements", "audienceRestriction", "authnContextClassRef", "groupFilter", "groupName", "groupValueFormat", "nameIDFormat", "realm", "siteURL", "usernameAttribute", "wReplyOverride", "wReplyURL", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attributeStatements"]) -> typing.Union[MetaOapg.properties.attributeStatements, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audienceRestriction"]) -> typing.Union[MetaOapg.properties.audienceRestriction, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authnContextClassRef"]) -> typing.Union[MetaOapg.properties.authnContextClassRef, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupFilter"]) -> typing.Union[MetaOapg.properties.groupFilter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupName"]) -> typing.Union[MetaOapg.properties.groupName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupValueFormat"]) -> typing.Union[MetaOapg.properties.groupValueFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nameIDFormat"]) -> typing.Union[MetaOapg.properties.nameIDFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["realm"]) -> typing.Union[MetaOapg.properties.realm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["siteURL"]) -> typing.Union[MetaOapg.properties.siteURL, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernameAttribute"]) -> typing.Union[MetaOapg.properties.usernameAttribute, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wReplyOverride"]) -> typing.Union[MetaOapg.properties.wReplyOverride, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wReplyURL"]) -> typing.Union[MetaOapg.properties.wReplyURL, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["attributeStatements", "audienceRestriction", "authnContextClassRef", "groupFilter", "groupName", "groupValueFormat", "nameIDFormat", "realm", "siteURL", "usernameAttribute", "wReplyOverride", "wReplyURL", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        attributeStatements: typing.Union[MetaOapg.properties.attributeStatements, str, schemas.Unset] = schemas.unset,
        audienceRestriction: typing.Union[MetaOapg.properties.audienceRestriction, str, schemas.Unset] = schemas.unset,
        authnContextClassRef: typing.Union[MetaOapg.properties.authnContextClassRef, str, schemas.Unset] = schemas.unset,
        groupFilter: typing.Union[MetaOapg.properties.groupFilter, str, schemas.Unset] = schemas.unset,
        groupName: typing.Union[MetaOapg.properties.groupName, str, schemas.Unset] = schemas.unset,
        groupValueFormat: typing.Union[MetaOapg.properties.groupValueFormat, str, schemas.Unset] = schemas.unset,
        nameIDFormat: typing.Union[MetaOapg.properties.nameIDFormat, str, schemas.Unset] = schemas.unset,
        realm: typing.Union[MetaOapg.properties.realm, str, schemas.Unset] = schemas.unset,
        siteURL: typing.Union[MetaOapg.properties.siteURL, str, schemas.Unset] = schemas.unset,
        usernameAttribute: typing.Union[MetaOapg.properties.usernameAttribute, str, schemas.Unset] = schemas.unset,
        wReplyOverride: typing.Union[MetaOapg.properties.wReplyOverride, bool, schemas.Unset] = schemas.unset,
        wReplyURL: typing.Union[MetaOapg.properties.wReplyURL, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WsFederationApplicationSettingsApplication':
        return super().__new__(
            cls,
            *args,
            attributeStatements=attributeStatements,
            audienceRestriction=audienceRestriction,
            authnContextClassRef=authnContextClassRef,
            groupFilter=groupFilter,
            groupName=groupName,
            groupValueFormat=groupValueFormat,
            nameIDFormat=nameIDFormat,
            realm=realm,
            siteURL=siteURL,
            usernameAttribute=usernameAttribute,
            wReplyOverride=wReplyOverride,
            wReplyURL=wReplyURL,
            _configuration=_configuration,
            **kwargs,
        )
